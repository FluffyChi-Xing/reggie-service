var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.282,1,1.809]],["body/controllers/AppController.html",[0,2.029,1,2.863,2,1.613,3,0.441,4,0.373,5,0.373,6,3.038,7,0.758,8,2.029,9,4.388,10,1.45,11,0.041,12,0.95,13,3.7,14,1.613,15,1.331,16,0.844,17,1.058,18,2.476,19,3.038,20,0.441,21,0.069,22,2.601,23,2.601,24,1.45,25,3.7,26,0.032,27,0.032]],["title/modules/AppModule.html",[28,1.282,29,1.809]],["body/modules/AppModule.html",[1,2.511,2,1.515,3,0.287,4,0.243,5,0.243,11,0.041,16,0.965,17,0.688,18,2.405,19,1.974,20,0.287,21,0.045,24,0.943,26,0.024,27,0.024,28,1.78,29,3.324,30,1.169,31,1.169,32,1.479,33,1.479,34,1.169,35,2.511,36,1.479,37,1.974,38,1.974,39,1.974,40,2.695,41,2.695,42,2.138,43,1.479,44,1.479,45,2.405,46,2.855,47,2.405,48,2.405,49,2.405,50,3.674,51,1.691,52,1.974,53,1.479,54,1.227,55,2.405,56,2.405,57,1.479,58,2.405,59,2.405,60,2.405,61,3.146,62,2.405,63,2.405,64,1.479,65,2.405,66,2.405,67,0.688,68,2.405,69,2.405,70,2.405,71,2.405,72,2.405,73,1.048,74,2.405,75,1.048,76,2.405,77,2.405,78,2.405,79,2.405,80,2.405,81,1.691,82,2.405,83,2.405,84,2.405,85,1.974,86,2.405,87,2.405,88,2.405,89,1.691,90,2.405,91,2.405,92,2.405,93,1.974,94,2.405,95,2.405,96,2.405]],["title/injectables/AppService.html",[18,1.43,97,1.153]],["body/injectables/AppService.html",[3,0.464,4,0.393,5,0.393,7,0.797,8,2.094,9,4.468,11,0.04,12,0.999,14,1.696,15,1.374,16,0.706,17,1.113,18,2.335,20,0.464,21,0.072,24,1.526,26,0.033,27,0.033,97,1.883,98,2.394,99,3.196,100,3.893,101,3.893,102,3.893]],["title/classes/BackVo.html",[21,0.055,103,1.809]],["body/classes/BackVo.html",[3,0.376,4,0.318,5,0.318,7,0.645,11,0.039,12,1.411,15,1.633,20,0.376,21,0.059,26,0.029,27,0.029,67,1.572,73,2.055,75,2.055,103,2.579,104,1.234,105,4.583,106,2.585,107,1.48,108,3.871,109,2.568,110,2.568,111,2.568,112,2.568,113,2.443,114,3.149,115,3.149,116,3.149,117,3.149,118,3.149,119,3.149,120,3.149]],["title/classes/Category.html",[21,0.055,121,1.602]],["body/classes/Category.html",[3,0.527,4,0.445,5,0.445,11,0.037,20,0.527,21,0.082,26,0.035,27,0.035,104,1.73,121,2.822,122,3.623]],["title/controllers/CategoryController.html",[0,1.282,123,1.809]],["body/controllers/CategoryController.html",[0,1.613,2,1.613,3,0.441,4,0.373,5,0.373,7,0.758,8,2.029,10,1.45,11,0.041,12,0.95,14,1.613,16,0.844,17,1.058,20,0.441,21,0.069,22,2.601,23,2.601,24,1.45,26,0.032,27,0.032,121,2.015,123,2.863,124,3.038,125,3.038,126,4.388,127,3.7,128,2.476,129,3.038,130,3.7,131,3.7]],["title/modules/CategoryModule.html",[28,1.282,40,1.602]],["body/modules/CategoryModule.html",[2,1.973,3,0.423,4,0.357,5,0.357,11,0.04,16,0.905,17,1.013,20,0.423,21,0.066,26,0.031,27,0.031,28,2.175,30,1.721,31,1.721,32,2.178,33,2.178,34,1.721,35,3.069,36,2.178,40,3.028,42,2.784,43,2.178,44,2.178,123,3.069,128,2.702,129,2.907,132,2.907,133,2.907,134,3.541,135,3.541]],["title/injectables/CategoryService.html",[97,1.153,128,1.43]],["body/injectables/CategoryService.html",[3,0.464,4,0.393,5,0.393,7,0.797,8,2.094,11,0.04,12,0.999,14,2.094,15,1.113,16,0.706,17,1.113,20,0.464,21,0.072,24,1.526,26,0.033,27,0.033,97,1.883,98,2.394,121,2.12,126,4.468,128,2.335,136,3.196,137,3.893,138,3.196]],["title/classes/DishesCategoryDto.html",[21,0.055,139,1.809]],["body/classes/DishesCategoryDto.html",[3,0.524,4,0.443,5,0.443,11,0.037,20,0.524,21,0.082,26,0.035,27,0.035,104,1.721,139,3.177,140,3.604,141,3.086]],["title/entities/Employee.html",[54,1.038,142,1.809]],["body/entities/Employee.html",[3,0.232,4,0.196,5,0.196,7,0.397,10,2.074,11,0.041,12,1.358,15,1.513,16,0.352,20,0.232,21,0.036,26,0.02,27,0.02,54,1.046,61,2.831,64,1.193,67,1.513,73,1.568,75,1.568,81,1.364,107,1.046,108,3.561,109,1.959,110,1.959,111,1.959,112,1.959,113,2.384,142,1.823,143,1.593,144,3.597,145,3.597,146,1.748,147,3.597,148,3.597,149,4.027,150,3.597,151,1.941,152,2.964,153,2.831,154,1.941,155,3.597,156,1.941,157,4.757,158,5.291,159,2.964,160,1.941,161,4.027,162,2.964,163,1.941,164,2.964,165,1.941,166,2.964,167,1.941,168,2.964,169,1.941,170,1.941,171,3.597,172,1.941,173,1.941,174,2.964,175,1.941,176,5.13,177,4.757,178,2.964]],["title/controllers/EmployeeController.html",[0,1.282,179,1.809]],["body/controllers/EmployeeController.html",[0,0.698,2,0.698,3,0.191,4,0.161,5,0.161,7,0.328,8,1.112,10,1.857,11,0.041,12,1.217,14,2.065,15,1.355,16,0.766,17,0.458,20,0.191,21,0.03,22,1.126,23,1.126,24,1.857,26,0.017,27,0.017,54,1.123,67,1.266,113,2.052,125,1.315,146,2.152,179,1.569,180,1.315,181,4.593,182,2.552,183,2.552,184,3.628,185,3.181,186,2.095,187,2.552,188,2.55,189,2.095,190,2.095,191,1.601,192,1.763,193,1.601,194,1.601,195,2.723,196,2.723,197,3.775,198,1.601,199,1.601,200,1.601,201,3.775,202,2.552,203,1.601,204,1.601,205,2.978,206,1.601,207,1.601,208,2.095,209,1.601,210,2.552,211,1.601,212,2.095,213,1.601,214,1.601,215,1.601,216,2.552,217,1.601,218,1.315,219,1.976,220,1.601,221,1.601,222,1.315,223,1.581,224,2.552,225,1.601,226,1.601,227,1.601,228,1.601,229,1.601,230,1.546,231,1.315,232,2.611,233,1.126,234,1.126,235,0.985,236,1.601,237,1.601,238,1.315,239,1.601,240,1.601,241,3.775,242,1.601,243,1.601,244,1.601,245,1.126,246,1.601,247,1.601,248,1.601,249,3.962,250,1.601,251,1.601,252,1.601,253,1.601,254,1.601,255,1.601,256,1.601,257,1.601,258,1.601,259,1.601,260,1.601,261,1.601,262,1.601,263,1.601,264,1.601]],["title/modules/EmployeeModule.html",[28,1.282,41,1.602]],["body/modules/EmployeeModule.html",[2,1.91,3,0.402,4,0.34,5,0.34,11,0.04,16,0.97,17,0.963,20,0.402,21,0.063,26,0.03,27,0.03,28,2.124,30,1.637,31,1.637,32,2.071,33,2.071,34,1.637,35,2.996,36,2.071,41,2.987,42,2.695,43,2.071,44,2.071,46,2.765,52,2.765,53,2.071,54,1.189,179,2.996,230,2.666,231,2.765,265,2.765,266,2.765,267,3.368,268,3.368,269,2.765,270,3.368]],["title/injectables/EmployeeService.html",[97,1.153,230,1.43]],["body/injectables/EmployeeService.html",[3,0.092,4,0.077,5,0.077,7,0.157,8,0.597,10,0.726,11,0.042,12,1.009,14,1.593,15,1.045,16,0.689,17,0.22,20,0.092,21,0.014,24,1.912,26,0.009,27,0.009,50,2.347,51,0.54,53,0.472,54,1.009,57,0.472,64,0.472,67,1.045,73,1.763,75,0.807,89,0.54,93,1.845,97,0.537,98,0.472,103,0.472,107,0.483,109,0.418,110,0.418,111,0.418,112,0.745,113,1.39,138,0.631,142,0.472,146,1.609,153,1.302,181,3.967,186,1.52,188,1.58,189,1.124,190,1.124,192,1.092,195,1.907,196,1.907,197,2.717,201,3.407,205,1.52,208,1.52,212,2.347,218,1.124,219,1.224,222,1.124,223,0.98,230,0.665,232,1.52,233,0.54,234,0.54,238,0.631,241,3.225,245,1.302,269,0.631,271,0.631,272,2.868,273,1.852,274,2.347,275,1.369,276,1.369,277,2.248,278,1.369,279,1.369,280,1.369,281,0.768,282,1.369,283,0.768,284,0.768,285,1.369,286,0.768,287,0.631,288,1.369,289,0.768,290,1.369,291,0.768,292,0.768,293,4.92,294,4.039,295,3.624,296,0.768,297,0.768,298,1.369,299,0.768,300,1.52,301,1.369,302,0.768,303,1.124,304,0.768,305,0.768,306,0.768,307,0.54,308,0.768,309,0.768,310,0.768,311,0.768,312,1.124,313,0.631,314,3.493,315,2.717,316,3.486,317,0.962,318,3.31,319,0.768,320,2.248,321,0.768,322,1.369,323,1.302,324,1.369,325,0.768,326,0.768,327,1.369,328,0.768,329,3.101,330,0.768,331,2.717,332,3.558,333,4.334,334,2.579,335,2.86,336,0.768,337,0.768,338,0.768,339,2.86,340,2.248,341,1.369,342,1.369,343,0.768,344,0.768,345,0.768,346,1.369,347,0.768,348,0.768,349,0.768,350,0.768,351,0.768,352,0.768,353,0.768,354,0.768,355,0.768,356,0.768,357,0.768,358,0.768,359,0.768,360,0.768,361,0.768,362,0.768,363,0.768,364,0.768,365,0.768,366,0.768,367,0.768,368,0.768,369,0.768,370,0.768,371,0.768,372,0.768,373,0.768,374,0.768,375,0.768,376,1.852,377,0.768,378,0.768]],["title/classes/LoginDto.html",[21,0.055,223,1.282]],["body/classes/LoginDto.html",[3,0.421,4,0.356,5,0.356,7,0.722,10,1.77,11,0.041,12,1.159,15,1.502,16,0.639,20,0.421,21,0.084,26,0.031,27,0.031,67,1.291,73,2.171,75,2.171,104,1.382,107,1.594,223,1.968,294,3.707,379,3.063,380,2.895,381,3.174,382,3.526,383,3.526,384,4.981,385,2.895]],["title/guards/LoginGuard.html",[235,1.809,386,2.068]],["body/guards/LoginGuard.html",[3,0.331,4,0.28,5,0.28,7,0.569,8,1.678,11,0.041,12,0.713,14,1.211,16,0.865,17,0.794,20,0.331,21,0.052,24,1.089,26,0.026,27,0.026,57,1.708,61,1.953,67,0.794,89,1.953,97,1.509,107,0.98,146,1.35,195,1.708,196,1.708,235,2.368,245,1.953,272,3.161,274,3.918,295,2.28,303,2.28,312,2.28,313,2.28,315,2.28,316,3.918,317,2.707,323,1.953,331,2.28,332,2.28,387,2.778,388,3.161,389,2.28,390,5.013,391,2.778,392,4.773,393,2.778,394,3.851,395,3.851,396,3.851,397,4.42,398,3.851,399,2.28,400,4.42,401,2.28,402,2.778,403,2.778,404,3.851,405,2.778,406,3.851,407,2.778,408,2.778,409,2.778]],["title/classes/RegisterDto.html",[21,0.055,192,1.43]],["body/classes/RegisterDto.html",[3,0.367,4,0.31,5,0.31,7,0.63,10,1.619,11,0.04,12,1.373,15,1.588,16,0.558,20,0.367,21,0.057,26,0.028,27,0.028,54,1.087,67,1.53,73,1.8,75,1.8,104,1.207,107,1.458,109,2.539,110,2.539,111,2.539,112,2.539,113,2.007,192,2.007,223,2.265,233,2.164,379,3.195,381,2.904,410,2.527,411,2.904,412,3.079,413,3.079,414,3.079,415,3.079,416,3.391,417,2.527,418,2.527]],["title/classes/UpdateCategoryDto.html",[21,0.055,419,2.068]],["body/classes/UpdateCategoryDto.html",[3,0.483,4,0.408,5,0.408,11,0.04,16,0.892,20,0.483,21,0.075,26,0.033,27,0.033,104,1.586,139,2.488,141,2.844,411,3.458,419,3.458,420,3.321,421,4.92,422,4.046,423,3.321,424,3.321,425,4.046,426,4.046]],["title/classes/UpdateDto.html",[21,0.055,219,1.602]],["body/classes/UpdateDto.html",[3,0.359,4,0.304,5,0.304,7,0.616,10,1.595,11,0.04,12,1.395,15,1.554,16,0.546,20,0.359,21,0.056,26,0.028,27,0.028,54,1.063,67,1.554,73,1.774,75,1.774,104,1.18,107,1.436,109,2.216,110,2.216,111,2.216,112,2.216,113,1.463,146,2.24,192,2.641,219,2.216,223,1.774,234,2.117,379,2.502,381,2.861,411,2.861,416,4.363,417,2.472,418,2.472,427,2.472,428,3.011,429,3.011,430,3.011,431,3.011,432,3.011]],["title/coverage.html",[433,2.816]],["body/coverage.html",[0,1.933,1,1.72,5,0.282,6,2.296,11,0.04,18,1.359,21,0.099,26,0.026,27,0.026,34,1.359,54,0.987,67,0.8,97,1.739,99,2.296,103,1.72,105,2.296,106,2.296,121,1.523,122,2.296,123,1.72,124,2.296,128,1.359,136,2.296,139,1.72,140,2.296,141,2.72,142,1.72,143,2.296,153,4.111,179,1.72,180,2.296,192,1.359,219,1.523,223,1.219,230,1.359,235,1.72,271,2.296,307,1.966,317,1.966,379,2.728,380,2.296,386,1.966,388,2.296,389,2.296,410,2.296,419,1.966,420,2.296,427,2.296,433,1.966,434,2.796,435,2.796,436,2.796,437,4.787,438,5.198,439,3.869,440,2.796,441,3.869,442,2.796,443,2.796,444,2.296,445,3.869,446,2.296,447,2.796,448,2.796]],["title/dependencies.html",[31,1.718,449,2.02]],["body/dependencies.html",[11,0.041,17,1.044,21,0.086,26,0.031,27,0.031,31,1.774,51,2.567,53,2.245,57,2.245,64,2.245,85,2.997,385,2.997,399,2.997,401,3.79,423,2.997,424,2.997,450,5.063,451,3.651,452,3.651,453,3.651,454,3.651,455,3.651,456,3.651,457,3.651,458,3.651,459,3.651,460,3.651,461,3.651,462,3.651,463,3.651,464,3.651,465,3.651,466,3.651]],["title/miscellaneous/functions.html",[467,2.02,468,2.903]],["body/miscellaneous/functions.html",[7,0.853,11,0.037,15,1.433,26,0.034,27,0.034,34,2.61,67,1.192,146,2.026,195,2.563,196,2.563,287,3.422,307,3.522,444,3.422,446,3.422,467,3.422,468,3.422,469,4.168,470,4.168,471,4.168]],["title/index.html",[7,0.504,472,2.461,473,2.461]],["body/index.html",[4,0.306,11,0.04,26,0.028,27,0.028,188,2.875,300,2.49,433,2.132,474,3.033,475,3.033,476,4.09,477,3.033,478,3.033,479,3.033,480,3.033,481,3.033,482,3.033,483,2.49,484,4.627,485,3.033,486,3.033,487,3.033,488,4.627,489,5.444,490,3.033,491,3.033,492,3.033,493,5.327,494,3.033,495,3.033,496,4.09,497,3.033,498,3.033,499,3.033,500,3.033,501,4.09,502,3.033,503,3.033,504,3.033,505,4.09,506,4.09,507,3.033,508,3.033,509,3.033,510,3.033,511,3.033,512,2.49,513,3.033,514,3.033,515,3.033,516,3.033,517,3.033,518,3.033,519,3.033,520,3.033,521,3.033,522,3.033,523,2.49,524,3.033,525,3.033,526,3.033,527,3.033,528,3.033,529,3.033,530,2.49]],["title/modules.html",[30,1.947]],["body/modules.html",[11,0.035,26,0.035,27,0.035,29,2.63,30,2.078,40,2.329,41,2.329,512,4.457,531,5.43,532,5.43,533,5.43]],["title/overview.html",[534,3.288]],["body/overview.html",[2,1.498,11,0.038,18,2.392,26,0.03,27,0.03,28,1.498,29,3.498,30,1.671,31,1.671,32,2.114,33,2.114,34,1.671,35,2.114,36,2.114,37,2.822,38,2.822,39,2.822,40,2.933,41,2.933,42,2.732,43,2.114,44,2.114,81,2.417,98,2.114,104,1.347,128,2.392,132,2.822,133,2.822,230,2.392,265,2.822,266,2.822,323,3.123,386,2.417,534,2.822,535,4.922,536,3.438]],["title/properties.html",[107,1.248,449,2.02]],["body/properties.html",[11,0.04,26,0.035,27,0.035,107,1.55,483,3.604,523,3.604,530,3.604,537,4.39,538,4.39,539,4.39]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BackVo.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"entities/Employee.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"classes/LoginDto.html":{},"guards/LoginGuard.html":{},"classes/RegisterDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":153,"title":{},"body":{"entities/Employee.html":{},"injectables/EmployeeService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":538,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":458,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":464,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":457,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":438,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":442,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":443,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":437,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":439,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":440,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":441,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":323,"title":{},"body":{"injectables/EmployeeService.html":{},"guards/LoginGuard.html":{},"overview.html":{}}}],["1.18.0",{"_index":460,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["10.0.0",{"_index":450,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":455,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":453,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":166,"title":{},"body":{"entities/Employee.html":{}}}],["13144453456",{"_index":325,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["18",{"_index":159,"title":{},"body":{"entities/Employee.html":{}}}],["2",{"_index":168,"title":{},"body":{"entities/Employee.html":{}}}],["3",{"_index":535,"title":{},"body":{"overview.html":{}}}],["3.2.2",{"_index":451,"title":{},"body":{"dependencies.html":{}}}],["3.9.7",{"_index":461,"title":{},"body":{"dependencies.html":{}}}],["30m",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["32",{"_index":161,"title":{},"body":{"entities/Employee.html":{}}}],["546342344354654465",{"_index":328,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["64",{"_index":164,"title":{},"body":{"entities/Employee.html":{}}}],["7",{"_index":536,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["access",{"_index":339,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["accesstoken",{"_index":343,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["action",{"_index":138,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/EmployeeService.html":{}}}],["add",{"_index":275,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["add(employee",{"_index":280,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["addemployee",{"_index":182,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["addemployee(@body",{"_index":250,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["addemployee(employee",{"_index":191,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["admin",{"_index":319,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["amazing",{"_index":513,"title":{},"body":{"index.html":{}}}],["app",{"_index":491,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":482,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":181,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["author",{"_index":523,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":404,"title":{},"body":{"guards/LoginGuard.html":{}}}],["authorization.split",{"_index":407,"title":{},"body":{"guards/LoginGuard.html":{}}}],["authplugin",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":241,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["back.vo",{"_index":310,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["back.vo.ts",{"_index":106,"title":{},"body":{"classes/BackVo.html":{},"coverage.html":{}}}],["back.vo.ts:2",{"_index":114,"title":{},"body":{"classes/BackVo.html":{}}}],["back.vo.ts:3",{"_index":120,"title":{},"body":{"classes/BackVo.html":{}}}],["back.vo.ts:4",{"_index":116,"title":{},"body":{"classes/BackVo.html":{}}}],["back.vo.ts:5",{"_index":117,"title":{},"body":{"classes/BackVo.html":{}}}],["back.vo.ts:6",{"_index":118,"title":{},"body":{"classes/BackVo.html":{}}}],["back.vo.ts:7",{"_index":115,"title":{},"body":{"classes/BackVo.html":{}}}],["back.vo.ts:8",{"_index":119,"title":{},"body":{"classes/BackVo.html":{}}}],["backers",{"_index":514,"title":{},"body":{"index.html":{}}}],["backvo",{"_index":103,"title":{"classes/BackVo.html":{}},"body":{"classes/BackVo.html":{},"injectables/EmployeeService.html":{},"coverage.html":{}}}],["body",{"_index":226,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["boolean",{"_index":395,"title":{},"body":{"guards/LoginGuard.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/EmployeeModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":533,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":531,"title":{},"body":{"modules.html":{}}}],["building",{"_index":477,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":390,"title":{},"body":{"guards/LoginGuard.html":{}}}],["canactivate(context",{"_index":391,"title":{},"body":{"guards/LoginGuard.html":{}}}],["catch",{"_index":331,"title":{},"body":{"injectables/EmployeeService.html":{},"guards/LoginGuard.html":{}}}],["category",{"_index":121,"title":{"classes/Category.html":{}},"body":{"classes/Category.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"coverage.html":{}}}],["category.controller",{"_index":135,"title":{},"body":{"modules/CategoryModule.html":{}}}],["category.dto",{"_index":426,"title":{},"body":{"classes/UpdateCategoryDto.html":{}}}],["category.dto.ts",{"_index":141,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["category.service",{"_index":129,"title":{},"body":{"controllers/CategoryController.html":{},"modules/CategoryModule.html":{}}}],["category/category.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["categorycontroller",{"_index":123,"title":{"controllers/CategoryController.html":{}},"body":{"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"coverage.html":{}}}],["categorymodule",{"_index":40,"title":{"modules/CategoryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules.html":{},"overview.html":{}}}],["categoryservice",{"_index":128,"title":{"injectables/CategoryService.html":{}},"body":{"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"coverage.html":{},"overview.html":{}}}],["class",{"_index":21,"title":{"classes/BackVo.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BackVo.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"entities/Employee.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"classes/LoginDto.html":{},"guards/LoginGuard.html":{},"classes/RegisterDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":104,"title":{},"body":{"classes/BackVo.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_categorymodule",{"_index":132,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_categorymodule_providers",{"_index":133,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_employeemodule",{"_index":265,"title":{},"body":{"modules/EmployeeModule.html":{},"overview.html":{}}}],["cluster_employeemodule_providers",{"_index":266,"title":{},"body":{"modules/EmployeeModule.html":{},"overview.html":{}}}],["code",{"_index":293,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["column",{"_index":176,"title":{},"body":{"entities/Employee.html":{}}}],["column({comment",{"_index":157,"title":{},"body":{"entities/Employee.html":{}}}],["column({default",{"_index":152,"title":{},"body":{"entities/Employee.html":{}}}],["comment",{"_index":177,"title":{},"body":{"entities/Employee.html":{}}}],["common/guard/login",{"_index":236,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["config",{"_index":311,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["configmodule",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"injectables/EmployeeService.html":{}}}],["configservice.get('mysql_server_database",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mysql_server_host",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mysql_server_password",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mysql_server_port",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mysql_server_username",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["connectorpackage",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":316,"title":{},"body":{"injectables/EmployeeService.html":{},"guards/LoginGuard.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/CategoryController.html":{},"controllers/EmployeeController.html":{}}}],["context",{"_index":394,"title":{},"body":{"guards/LoginGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":403,"title":{},"body":{"guards/LoginGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/CategoryController.html":{},"controllers/EmployeeController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CategoryController.html":{},"controllers/EmployeeController.html":{},"coverage.html":{}}}],["controller('category",{"_index":130,"title":{},"body":{"controllers/CategoryController.html":{}}}],["controller('employee",{"_index":239,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"overview.html":{}}}],["count",{"_index":374,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["coverage",{"_index":433,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":425,"title":{},"body":{"classes/UpdateCategoryDto.html":{}}}],["create_time",{"_index":144,"title":{},"body":{"entities/Employee.html":{}}}],["create_user",{"_index":145,"title":{},"body":{"entities/Employee.html":{}}}],["createcategorydto",{"_index":139,"title":{"classes/CreateCategoryDto.html":{}},"body":{"classes/CreateCategoryDto.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["createdatecolumn",{"_index":150,"title":{},"body":{"entities/Employee.html":{}}}],["data",{"_index":295,"title":{},"body":{"injectables/EmployeeService.html":{},"guards/LoginGuard.html":{}}}],["data.username",{"_index":345,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["database",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":149,"title":{},"body":{"entities/Employee.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/EmployeeModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/CategoryController.html":{},"entities/Employee.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateDto.html":{}}}],["default",{"_index":178,"title":{},"body":{"entities/Employee.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/BackVo.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"entities/Employee.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/LoginDto.html":{},"guards/LoginGuard.html":{},"classes/RegisterDto.html":{},"classes/UpdateDto.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/EmployeeModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":483,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":492,"title":{},"body":{"index.html":{}}}],["djtu",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["documentation",{"_index":434,"title":{},"body":{"coverage.html":{}}}],["dto/employee",{"_index":232,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["e",{"_index":332,"title":{},"body":{"injectables/EmployeeService.html":{},"guards/LoginGuard.html":{}}}],["e2e",{"_index":502,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":478,"title":{},"body":{"index.html":{}}}],["employee",{"_index":54,"title":{"entities/Employee.html":{}},"body":{"modules/AppModule.html":{},"entities/Employee.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"classes/RegisterDto.html":{},"classes/UpdateDto.html":{},"coverage.html":{}}}],["employee.controller",{"_index":268,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["employee.id_number",{"_index":358,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["employee.phone",{"_index":354,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["employee.service",{"_index":231,"title":{},"body":{"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{}}}],["employee.sex",{"_index":352,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["employee.status",{"_index":356,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["employee.username",{"_index":346,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["employee/employee.module",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["employee/entities/employee.entity",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["employeecontroller",{"_index":179,"title":{"controllers/EmployeeController.html":{}},"body":{"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"coverage.html":{}}}],["employeeentity",{"_index":273,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["employeemodule",{"_index":41,"title":{"modules/EmployeeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EmployeeModule.html":{},"modules.html":{},"overview.html":{}}}],["employeeservice",{"_index":230,"title":{"injectables/EmployeeService.html":{}},"body":{"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"coverage.html":{},"overview.html":{}}}],["entities",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"entities/Employee.html":{},"overview.html":{}}}],["entities/employee.entity",{"_index":269,"title":{},"body":{"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{}}}],["entity",{"_index":142,"title":{"entities/Employee.html":{}},"body":{"entities/Employee.html":{},"injectables/EmployeeService.html":{},"coverage.html":{}}}],["envfilepath",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["example",{"_index":488,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":392,"title":{},"body":{"guards/LoginGuard.html":{}}}],["expiresin",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"injectables/EmployeeService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BackVo.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"entities/Employee.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"classes/LoginDto.html":{},"guards/LoginGuard.html":{},"classes/RegisterDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateDto.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/EmployeeModule.html":{},"overview.html":{}}}],["express",{"_index":401,"title":{},"body":{"guards/LoginGuard.html":{},"dependencies.html":{}}}],["extends",{"_index":411,"title":{},"body":{"classes/RegisterDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateDto.html":{}}}],["extra",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BackVo.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"entities/Employee.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"classes/LoginDto.html":{},"guards/LoginGuard.html":{},"classes/RegisterDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateDto.html":{},"coverage.html":{}}}],["findall",{"_index":126,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["framework",{"_index":476,"title":{},"body":{"index.html":{}}}],["frozenemployee",{"_index":276,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["frozenemployee(user",{"_index":282,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["frozenuser",{"_index":183,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["frozenuser(@query('user",{"_index":257,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["frozenuser(user",{"_index":198,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["function",{"_index":445,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":468,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('frozen",{"_index":256,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["get('frozen')@useguards(loginguard",{"_index":199,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["get('init",{"_index":202,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["get('pull",{"_index":252,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["get('pull')@useguards(loginguard",{"_index":206,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["get('refresh",{"_index":210,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["get('reuse",{"_index":259,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["get('reuse')@useguards(loginguard",{"_index":214,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["get('test",{"_index":216,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":472,"title":{"index.html":{}},"body":{}}],["global",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["grow",{"_index":509,"title":{},"body":{"index.html":{}}}],["guard",{"_index":386,"title":{"guards/LoginGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guard.guard",{"_index":237,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["guard.guard.ts",{"_index":389,"title":{},"body":{"guards/LoginGuard.html":{},"coverage.html":{}}}],["guard.guard.ts:17",{"_index":393,"title":{},"body":{"guards/LoginGuard.html":{}}}],["guards",{"_index":387,"title":{},"body":{"guards/LoginGuard.html":{}}}],["hello",{"_index":101,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":520,"title":{},"body":{"index.html":{}}}],["host",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["https://nestjs.com",{"_index":527,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":305,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["httpstatus.bad_request",{"_index":333,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["httpstatus.ok",{"_index":314,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["id",{"_index":108,"title":{},"body":{"classes/BackVo.html":{},"entities/Employee.html":{}}}],["id_number",{"_index":109,"title":{},"body":{"classes/BackVo.html":{},"entities/Employee.html":{},"injectables/EmployeeService.html":{},"classes/RegisterDto.html":{},"classes/UpdateDto.html":{}}}],["identifier",{"_index":435,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":402,"title":{},"body":{"guards/LoginGuard.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"entities/Employee.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"classes/LoginDto.html":{},"guards/LoginGuard.html":{},"classes/RegisterDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateDto.html":{}}}],["imports",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/EmployeeModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/BackVo.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"entities/Employee.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/LoginDto.html":{},"guards/LoginGuard.html":{},"classes/RegisterDto.html":{},"classes/UpdateDto.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BackVo.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"entities/Employee.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"classes/LoginDto.html":{},"guards/LoginGuard.html":{},"classes/RegisterDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateDto.html":{}}}],["inherited",{"_index":416,"title":{},"body":{"classes/RegisterDto.html":{},"classes/UpdateDto.html":{}}}],["initdata",{"_index":184,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["inject",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"injectables/EmployeeService.html":{},"guards/LoginGuard.html":{}}}],["inject(configservice",{"_index":298,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["inject(jwtservice",{"_index":303,"title":{},"body":{"injectables/EmployeeService.html":{},"guards/LoginGuard.html":{}}}],["injectable",{"_index":97,"title":{"injectables/AppService.html":{},"injectables/CategoryService.html":{},"injectables/EmployeeService.html":{}},"body":{"injectables/AppService.html":{},"injectables/CategoryService.html":{},"injectables/EmployeeService.html":{},"guards/LoginGuard.html":{},"coverage.html":{}}}],["injectables",{"_index":98,"title":{},"body":{"injectables/AppService.html":{},"injectables/CategoryService.html":{},"injectables/EmployeeService.html":{},"overview.html":{}}}],["injectrepository",{"_index":306,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["injectrepository(employee",{"_index":301,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["insertone",{"_index":277,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["installation",{"_index":487,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":490,"title":{},"body":{"index.html":{}}}],["isglobal",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":384,"title":{},"body":{"classes/LoginDto.html":{}}}],["isnotempty({message",{"_index":381,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateDto.html":{}}}],["item.id_number",{"_index":369,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["item.password",{"_index":363,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["item.phone",{"_index":367,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["item.sex",{"_index":365,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["item.status",{"_index":371,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["item.username",{"_index":361,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["join",{"_index":516,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":313,"title":{},"body":{"injectables/EmployeeService.html":{},"guards/LoginGuard.html":{}}}],["jwtmodule",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtmodule.register",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtservice",{"_index":274,"title":{},"body":{"injectables/EmployeeService.html":{},"guards/LoginGuard.html":{}}}],["kamil",{"_index":524,"title":{},"body":{"index.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/EmployeeModule.html":{},"overview.html":{}}}],["length",{"_index":158,"title":{},"body":{"entities/Employee.html":{}}}],["license",{"_index":530,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":506,"title":{},"body":{"index.html":{}}}],["list",{"_index":373,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["list.push(vo",{"_index":372,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["logging",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["login.dto",{"_index":233,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/RegisterDto.html":{}}}],["login.dto.ts",{"_index":380,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["login.dto.ts:11",{"_index":382,"title":{},"body":{"classes/LoginDto.html":{}}}],["login.dto.ts:7",{"_index":383,"title":{},"body":{"classes/LoginDto.html":{}}}],["logindto",{"_index":223,"title":{"classes/LoginDto.html":{}},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateDto.html":{},"coverage.html":{}}}],["logindto:11",{"_index":417,"title":{},"body":{"classes/RegisterDto.html":{},"classes/UpdateDto.html":{}}}],["logindto:7",{"_index":418,"title":{},"body":{"classes/RegisterDto.html":{},"classes/UpdateDto.html":{}}}],["loginguard",{"_index":235,"title":{"guards/LoginGuard.html":{}},"body":{"controllers/EmployeeController.html":{},"guards/LoginGuard.html":{},"coverage.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BackVo.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"entities/Employee.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"classes/LoginDto.html":{},"guards/LoginGuard.html":{},"classes/RegisterDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["md5",{"_index":307,"title":{},"body":{"injectables/EmployeeService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["md5('123456",{"_index":321,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["md5(employee.password",{"_index":350,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["md5(str",{"_index":471,"title":{},"body":{"miscellaneous/functions.html":{}}}],["md5(user.password",{"_index":337,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["message",{"_index":294,"title":{},"body":{"injectables/EmployeeService.html":{},"classes/LoginDto.html":{}}}],["metadata",{"_index":463,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"guards/LoginGuard.html":{}}}],["miscellaneous",{"_index":467,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":505,"title":{},"body":{"index.html":{}}}],["mode",{"_index":496,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/EmployeeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/EmployeeModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/EmployeeModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":519,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["mysql2",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["myśliwiec",{"_index":525,"title":{},"body":{"index.html":{}}}],["name",{"_index":146,"title":{},"body":{"entities/Employee.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"guards/LoginGuard.html":{},"classes/UpdateDto.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":484,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":529,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"guards/LoginGuard.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"injectables/EmployeeService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":452,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"injectables/EmployeeService.html":{},"guards/LoginGuard.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":423,"title":{},"body":{"classes/UpdateCategoryDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":454,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"dependencies.html":{}}}],["new",{"_index":317,"title":{},"body":{"injectables/EmployeeService.html":{},"guards/LoginGuard.html":{},"coverage.html":{}}}],["newemployee",{"_index":347,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["newemployee.id_number",{"_index":357,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["newemployee.password",{"_index":349,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["newemployee.phone",{"_index":353,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["newemployee.sex",{"_index":351,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["newemployee.status",{"_index":355,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["newemployee.username",{"_index":348,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["node.js",{"_index":475,"title":{},"body":{"index.html":{}}}],["npm",{"_index":489,"title":{},"body":{"index.html":{}}}],["nullable",{"_index":162,"title":{},"body":{"entities/Employee.html":{}}}],["number",{"_index":113,"title":{},"body":{"classes/BackVo.html":{},"entities/Employee.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/RegisterDto.html":{},"classes/UpdateDto.html":{}}}],["observable",{"_index":397,"title":{},"body":{"guards/LoginGuard.html":{}}}],["open",{"_index":507,"title":{},"body":{"index.html":{}}}],["optional",{"_index":196,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"guards/LoginGuard.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/EmployeeModule.html":{},"overview.html":{}}}],["overview",{"_index":534,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":449,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pageno",{"_index":208,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["pagesize",{"_index":205,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["parameters",{"_index":195,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"guards/LoginGuard.html":{},"miscellaneous/functions.html":{}}}],["partialtype",{"_index":422,"title":{},"body":{"classes/UpdateCategoryDto.html":{}}}],["partialtype(createcategorydto",{"_index":421,"title":{},"body":{"classes/UpdateCategoryDto.html":{}}}],["password",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"classes/BackVo.html":{},"entities/Employee.html":{},"injectables/EmployeeService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateDto.html":{}}}],["person",{"_index":334,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["person.password",{"_index":336,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["person.status",{"_index":338,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["phone",{"_index":110,"title":{},"body":{"classes/BackVo.html":{},"entities/Employee.html":{},"injectables/EmployeeService.html":{},"classes/RegisterDto.html":{},"classes/UpdateDto.html":{}}}],["please",{"_index":517,"title":{},"body":{"index.html":{}}}],["poolsize",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["port",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":227,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["post('add",{"_index":248,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["post('add')@useguards(loginguard",{"_index":193,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["post('login",{"_index":224,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["post('update",{"_index":262,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["post('update')@useguards(loginguard",{"_index":220,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["prefix",{"_index":125,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/EmployeeController.html":{}}}],["primarygeneratedcolumn",{"_index":155,"title":{},"body":{"entities/Employee.html":{}}}],["private",{"_index":272,"title":{},"body":{"injectables/EmployeeService.html":{},"guards/LoginGuard.html":{}}}],["production",{"_index":498,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":474,"title":{},"body":{"index.html":{}}}],["project",{"_index":508,"title":{},"body":{"index.html":{}}}],["promise",{"_index":396,"title":{},"body":{"guards/LoginGuard.html":{}}}],["properties",{"_index":107,"title":{"properties.html":{}},"body":{"classes/BackVo.html":{},"entities/Employee.html":{},"injectables/EmployeeService.html":{},"classes/LoginDto.html":{},"guards/LoginGuard.html":{},"classes/RegisterDto.html":{},"classes/UpdateDto.html":{},"properties.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/EmployeeModule.html":{},"overview.html":{}}}],["pullinfo",{"_index":185,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["pullinfo(pageno",{"_index":204,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["query",{"_index":228,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["query('pageno",{"_index":253,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["query('pagesize",{"_index":254,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["read",{"_index":518,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/CategoryController.html":{},"controllers/EmployeeController.html":{}}}],["reflect",{"_index":462,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":212,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["refreshtoken",{"_index":186,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["refreshtoken(@query('refresh",{"_index":246,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["refreshtoken(refresh",{"_index":209,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["refreshtoken(str",{"_index":285,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["register.dto",{"_index":234,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/UpdateDto.html":{}}}],["register.dto.ts",{"_index":410,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["register.dto.ts:4",{"_index":413,"title":{},"body":{"classes/RegisterDto.html":{}}}],["register.dto.ts:5",{"_index":414,"title":{},"body":{"classes/RegisterDto.html":{}}}],["register.dto.ts:6",{"_index":412,"title":{},"body":{"classes/RegisterDto.html":{}}}],["register.dto.ts:7",{"_index":415,"title":{},"body":{"classes/RegisterDto.html":{}}}],["registerdto",{"_index":192,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/RegisterDto.html":{},"classes/UpdateDto.html":{},"coverage.html":{}}}],["registerdto:4",{"_index":430,"title":{},"body":{"classes/UpdateDto.html":{}}}],["registerdto:5",{"_index":431,"title":{},"body":{"classes/UpdateDto.html":{}}}],["registerdto:6",{"_index":429,"title":{},"body":{"classes/UpdateDto.html":{}}}],["registerdto:7",{"_index":432,"title":{},"body":{"classes/UpdateDto.html":{}}}],["repository",{"_index":300,"title":{},"body":{"injectables/EmployeeService.html":{},"index.html":{}}}],["request",{"_index":400,"title":{},"body":{"guards/LoginGuard.html":{}}}],["request.headers.authorization",{"_index":405,"title":{},"body":{"guards/LoginGuard.html":{}}}],["reset",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/EmployeeModule.html":{},"overview.html":{}}}],["result",{"_index":329,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["result.status",{"_index":377,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BackVo.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"entities/Employee.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"classes/LoginDto.html":{},"guards/LoginGuard.html":{},"classes/RegisterDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"guards/LoginGuard.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"guards/LoginGuard.html":{}}}],["reuse",{"_index":278,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["reuse(user",{"_index":288,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["reuseuser",{"_index":187,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["reuseuser(@query('user",{"_index":260,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["reuseuser(user",{"_index":213,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["run",{"_index":493,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":399,"title":{},"body":{"guards/LoginGuard.html":{},"dependencies.html":{}}}],["scalable",{"_index":479,"title":{},"body":{"index.html":{}}}],["searchbypages",{"_index":279,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["searchbypages(pageno",{"_index":290,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["secret",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["server",{"_index":480,"title":{},"body":{"index.html":{}}}],["service",{"_index":312,"title":{},"body":{"injectables/EmployeeService.html":{},"guards/LoginGuard.html":{}}}],["session",{"_index":459,"title":{},"body":{"dependencies.html":{}}}],["sex",{"_index":111,"title":{},"body":{"classes/BackVo.html":{},"entities/Employee.html":{},"injectables/EmployeeService.html":{},"classes/RegisterDto.html":{},"classes/UpdateDto.html":{}}}],["sha256_password",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["side",{"_index":481,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BackVo.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"entities/Employee.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"classes/LoginDto.html":{},"guards/LoginGuard.html":{},"classes/RegisterDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateDto.html":{},"index.html":{}}}],["sponsors",{"_index":511,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":469,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../md5.ts",{"_index":470,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.env",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":99,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":100,"title":{},"body":{"injectables/AppService.html":{}}}],["src/category/category.controller.ts",{"_index":124,"title":{},"body":{"controllers/CategoryController.html":{},"coverage.html":{}}}],["src/category/category.controller.ts:8",{"_index":127,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/category/category.module.ts",{"_index":134,"title":{},"body":{"modules/CategoryModule.html":{}}}],["src/category/category.service.ts",{"_index":136,"title":{},"body":{"injectables/CategoryService.html":{},"coverage.html":{}}}],["src/category/category.service.ts:5",{"_index":137,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/category/dto/create",{"_index":140,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["src/category/dto/update",{"_index":420,"title":{},"body":{"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["src/category/entities/category.entity.ts",{"_index":122,"title":{},"body":{"classes/Category.html":{},"coverage.html":{}}}],["src/common/guard/login",{"_index":388,"title":{},"body":{"guards/LoginGuard.html":{},"coverage.html":{}}}],["src/employee/dto/employee",{"_index":379,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateDto.html":{},"coverage.html":{}}}],["src/employee/employee.controller.ts",{"_index":180,"title":{},"body":{"controllers/EmployeeController.html":{},"coverage.html":{}}}],["src/employee/employee.controller.ts:13",{"_index":217,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/employee.controller.ts:18",{"_index":203,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/employee.controller.ts:23",{"_index":225,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/employee.controller.ts:28",{"_index":211,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/employee.controller.ts:34",{"_index":194,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/employee.controller.ts:40",{"_index":207,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/employee.controller.ts:49",{"_index":200,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/employee.controller.ts:55",{"_index":215,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/employee.controller.ts:61",{"_index":221,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/employee.module.ts",{"_index":267,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["src/employee/employee.service.ts",{"_index":271,"title":{},"body":{"injectables/EmployeeService.html":{},"coverage.html":{}}}],["src/employee/employee.service.ts:111",{"_index":286,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/employee/employee.service.ts:159",{"_index":281,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/employee/employee.service.ts:17",{"_index":302,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/employee/employee.service.ts:193",{"_index":291,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/employee/employee.service.ts:20",{"_index":299,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/employee/employee.service.ts:23",{"_index":304,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/employee/employee.service.ts:234",{"_index":283,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/employee/employee.service.ts:25",{"_index":292,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/employee/employee.service.ts:269",{"_index":289,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/employee/employee.service.ts:309",{"_index":296,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/employee/employee.service.ts:33",{"_index":284,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/employee/employee.service.ts:57",{"_index":297,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/employee/entities/employee.entity.ts",{"_index":143,"title":{},"body":{"entities/Employee.html":{},"coverage.html":{}}}],["src/employee/entities/employee.entity.ts:11",{"_index":156,"title":{},"body":{"entities/Employee.html":{}}}],["src/employee/entities/employee.entity.ts:17",{"_index":163,"title":{},"body":{"entities/Employee.html":{}}}],["src/employee/entities/employee.entity.ts:23",{"_index":175,"title":{},"body":{"entities/Employee.html":{}}}],["src/employee/entities/employee.entity.ts:28",{"_index":165,"title":{},"body":{"entities/Employee.html":{}}}],["src/employee/entities/employee.entity.ts:33",{"_index":167,"title":{},"body":{"entities/Employee.html":{}}}],["src/employee/entities/employee.entity.ts:38",{"_index":169,"title":{},"body":{"entities/Employee.html":{}}}],["src/employee/entities/employee.entity.ts:43",{"_index":160,"title":{},"body":{"entities/Employee.html":{}}}],["src/employee/entities/employee.entity.ts:47",{"_index":170,"title":{},"body":{"entities/Employee.html":{}}}],["src/employee/entities/employee.entity.ts:49",{"_index":151,"title":{},"body":{"entities/Employee.html":{}}}],["src/employee/entities/employee.entity.ts:51",{"_index":172,"title":{},"body":{"entities/Employee.html":{}}}],["src/employee/entities/employee.entity.ts:55",{"_index":154,"title":{},"body":{"entities/Employee.html":{}}}],["src/employee/entities/employee.entity.ts:59",{"_index":173,"title":{},"body":{"entities/Employee.html":{}}}],["src/employee/vo/employee",{"_index":105,"title":{},"body":{"classes/BackVo.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":444,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/md5.ts",{"_index":446,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":494,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":497,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":499,"title":{},"body":{"index.html":{}}}],["started",{"_index":473,"title":{"index.html":{}},"body":{}}],["starter",{"_index":486,"title":{},"body":{"index.html":{}}}],["statements",{"_index":436,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":112,"title":{},"body":{"classes/BackVo.html":{},"entities/Employee.html":{},"injectables/EmployeeService.html":{},"classes/RegisterDto.html":{},"classes/UpdateDto.html":{}}}],["stay",{"_index":521,"title":{},"body":{"index.html":{}}}],["str",{"_index":287,"title":{},"body":{"injectables/EmployeeService.html":{},"miscellaneous/functions.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/BackVo.html":{},"injectables/CategoryService.html":{},"entities/Employee.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateDto.html":{},"miscellaneous/functions.html":{}}}],["support",{"_index":512,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":532,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":448,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":447,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":188,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"index.html":{}}}],["test:covsupport",{"_index":504,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":503,"title":{},"body":{"index.html":{}}}],["tests",{"_index":501,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":510,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.categoryservice.findall",{"_index":131,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.configservice.get('jwt_server_access",{"_index":341,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.configservice.get('jwt_server_refresh",{"_index":342,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.employeeentity.findone",{"_index":335,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.employeeentity.insert(user",{"_index":330,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.employeeentity.save(newemployee",{"_index":359,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.employeeentity.update",{"_index":376,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.employeeservice.add(employee",{"_index":251,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.frozenemployee(user",{"_index":258,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.insertone",{"_index":242,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.refreshtoken(refresh",{"_index":247,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.reuse(user",{"_index":261,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.searchbypages(pageno",{"_index":255,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.test",{"_index":240,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.updateuser(user",{"_index":264,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.userlogin(user",{"_index":244,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.jwtservice.sign",{"_index":340,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.jwtservice.verify(str",{"_index":344,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.jwtservice.verify(token",{"_index":408,"title":{},"body":{"guards/LoginGuard.html":{}}}],["throw",{"_index":406,"title":{},"body":{"guards/LoginGuard.html":{}}}],["token",{"_index":245,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"guards/LoginGuard.html":{}}}],["totalcount",{"_index":375,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["touch",{"_index":522,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":456,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"entities/Employee.html":{},"guards/LoginGuard.html":{}}}],["try",{"_index":315,"title":{},"body":{"injectables/EmployeeService.html":{},"guards/LoginGuard.html":{}}}],["twitter",{"_index":528,"title":{},"body":{"index.html":{}}}],["type",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"classes/BackVo.html":{},"entities/Employee.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/LoginDto.html":{},"guards/LoginGuard.html":{},"classes/RegisterDto.html":{},"classes/UpdateDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["typeorm",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"entities/Employee.html":{},"injectables/EmployeeService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/EmployeeModule.html":{}}}],["typeormmodule.forfeature([employee",{"_index":270,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["typeormmodule.forrootasync",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":424,"title":{},"body":{"classes/UpdateCategoryDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":485,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":398,"title":{},"body":{"guards/LoginGuard.html":{}}}],["unauthorizedexception('token",{"_index":409,"title":{},"body":{"guards/LoginGuard.html":{}}}],["unique",{"_index":174,"title":{},"body":{"entities/Employee.html":{}}}],["unit",{"_index":500,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":197,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["unlicensed",{"_index":539,"title":{},"body":{"properties.html":{}}}],["update.dto",{"_index":238,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["update.dto.ts",{"_index":427,"title":{},"body":{"classes/UpdateDto.html":{},"coverage.html":{}}}],["update.dto.ts:4",{"_index":428,"title":{},"body":{"classes/UpdateDto.html":{}}}],["update_time",{"_index":147,"title":{},"body":{"entities/Employee.html":{}}}],["update_user",{"_index":148,"title":{},"body":{"entities/Employee.html":{}}}],["updatecategorydto",{"_index":419,"title":{"classes/UpdateCategoryDto.html":{}},"body":{"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["updatedatecolumn",{"_index":171,"title":{},"body":{"entities/Employee.html":{}}}],["updatedto",{"_index":219,"title":{"classes/UpdateDto.html":{}},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"classes/UpdateDto.html":{},"coverage.html":{}}}],["updateuser",{"_index":189,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["updateuser(@body",{"_index":263,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["updateuser(user",{"_index":218,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["usefactory(configservice",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":229,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["useguards(loginguard",{"_index":249,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["user",{"_index":201,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["user.id_number",{"_index":327,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["user.name",{"_index":378,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["user.password",{"_index":320,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["user.phone",{"_index":324,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["user.sex",{"_index":322,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["user.status",{"_index":326,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["user.username",{"_index":318,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["userlogin",{"_index":190,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["userlogin(@body",{"_index":243,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["userlogin(user",{"_index":222,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{}}}],["username",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"classes/BackVo.html":{},"entities/Employee.html":{},"injectables/EmployeeService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateDto.html":{}}}],["utils/md5",{"_index":308,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["validator",{"_index":385,"title":{},"body":{"classes/LoginDto.html":{},"dependencies.html":{}}}],["version",{"_index":537,"title":{},"body":{"properties.html":{}}}],["vo.id_number",{"_index":368,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["vo.password",{"_index":362,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["vo.phone",{"_index":366,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["vo.sex",{"_index":364,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["vo.status",{"_index":370,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["vo.username",{"_index":360,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["vo/employee",{"_index":309,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["watch",{"_index":495,"title":{},"body":{"index.html":{}}}],["website",{"_index":526,"title":{},"body":{"index.html":{}}}],["world",{"_index":102,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":515,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/EmployeeModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nCategoryModule\n\nCategoryModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCategoryModule->AppModule\n\n\n\n\n\nEmployeeModule\n\nEmployeeModule\n\nAppModule -->\n\nEmployeeModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CategoryModule\n                        \n                        \n                            EmployeeModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { EmployeeModule } from './employee/employee.module';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Employee } from './employee/entities/employee.entity';\nimport { JwtModule } from '@nestjs/jwt';\nimport { CategoryModule } from './category/category.module';\n\n@Module({\n  imports: [\n    EmployeeModule,\n    //引入configService\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: 'src/.env',\n    }),\n    //引入 Typeorm\n    TypeOrmModule.forRootAsync({\n      useFactory(configService: ConfigService) {\n        return {\n          type: 'mysql',\n          host: configService.get('mysql_server_host'),\n          port: configService.get('mysql_server_port'),\n          username: configService.get('mysql_server_username'),\n          password: configService.get('mysql_server_password'),\n          database: configService.get('mysql_server_database'),\n          synchronize: true,\n          logging: true,\n          entities: [Employee],\n          poolSize: 10,\n          connectorPackage: 'mysql2',\n          extra: {\n            authPlugin: 'sha256_password',\n          },\n        };\n      },\n      inject: [ConfigService],\n    }),\n    JwtModule.register({\n      global: true,\n      signOptions: {\n        expiresIn: '30m',\n      },\n      secret: 'djtu',\n    }),\n    CategoryModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BackVo.html":{"url":"classes/BackVo.html","title":"class - BackVo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BackVo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/vo/employee-back.vo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                id_number\n                            \n                            \n                                password\n                            \n                            \n                                phone\n                            \n                            \n                                sex\n                            \n                            \n                                status\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/employee/vo/employee-back.vo.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/employee/vo/employee-back.vo.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/employee/vo/employee-back.vo.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/employee/vo/employee-back.vo.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/employee/vo/employee-back.vo.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/employee/vo/employee-back.vo.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/employee/vo/employee-back.vo.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class BackVo {\n  id: number;\n  username: string;\n  password: string;\n  phone: string;\n  sex: string;\n  id_number: string;\n  status: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/category/entities/category.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Category {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CategoryController.html":{"url":"controllers/CategoryController.html","title":"controller - CategoryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CategoryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/category/category.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                category\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/category/category.controller.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { CategoryService } from './category.service';\n\n@Controller('category')\nexport class CategoryController {\n  constructor(private readonly categoryService: CategoryService) {}\n  @Get()\n  findAll() {\n    return this.categoryService.findAll();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoryModule.html":{"url":"modules/CategoryModule.html","title":"module - CategoryModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoryModule\n\n\n\ncluster_CategoryModule_providers\n\n\n\n\nCategoryService\n\nCategoryService\n\n\n\nCategoryModule\n\nCategoryModule\n\nCategoryModule -->\n\nCategoryService->CategoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/category/category.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CategoryController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CategoryService } from './category.service';\nimport { CategoryController } from './category.controller';\n\n@Module({\n  controllers: [CategoryController],\n  providers: [CategoryService],\n})\nexport class CategoryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryService.html":{"url":"injectables/CategoryService.html","title":"injectable - CategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/category/category.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/category/category.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CategoryService {\n  findAll() {\n    return `This action returns all category`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoryDto.html":{"url":"classes/CreateCategoryDto.html","title":"class - DishesCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DishesCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/category/dto/dishes-category.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DishesCategoryDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Employee.html":{"url":"entities/Employee.html","title":"entity - Employee","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Employee\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/entities/employee.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create_time\n                            \n                            \n                                    \n                                create_user\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                id_number\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                sex\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                update_time\n                            \n                            \n                                    \n                                update_user\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create_time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/entities/employee.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create_user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/entities/employee.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/entities/employee.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: 'id号', length: 18})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/entities/employee.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: '权限名', length: 32, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/entities/employee.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: '密码', length: 64})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/entities/employee.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: '手机号', length: 11})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/entities/employee.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: '性别', length: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/entities/employee.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: '权限名'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/entities/employee.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update_time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/entities/employee.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update_user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/entities/employee.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: '用户名', length: 32, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/entities/employee.entity.ts:23\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  PrimaryGeneratedColumn,\n  Entity,\n  CreateDateColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n@Entity()\nexport class Employee {\n  @PrimaryGeneratedColumn()\n  id: number;\n  @Column({\n    comment: '权限名',\n    length: 32,\n    nullable: true,\n  })\n  name: string;\n  @Column({\n    comment: '用户名',\n    length: 32,\n    unique: true,\n  })\n  username: string;\n  @Column({\n    comment: '密码',\n    length: 64,\n  })\n  password: string;\n  @Column({\n    comment: '手机号',\n    length: 11,\n  })\n  phone: string;\n  @Column({\n    comment: '性别',\n    length: 2,\n  })\n  sex: string;\n  @Column({\n    comment: 'id号',\n    length: 18,\n  })\n  id_number: string;\n  @Column({\n    comment: '权限名',\n  })\n  status: number;\n  @CreateDateColumn()\n  create_time: Date;\n  @UpdateDateColumn()\n  update_time: Date;\n  @Column({\n    default: 0,\n  })\n  create_user: number;\n  @Column({\n    default: 0,\n  })\n  update_user: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EmployeeController.html":{"url":"controllers/EmployeeController.html","title":"controller - EmployeeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EmployeeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/employee.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                employee\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                addEmployee\n                            \n                            \n                                    \n                                    \n                                    Async\n                                frozenUser\n                            \n                            \n                                    \n                                    Async\n                                initData\n                            \n                            \n                                    \n                                    \n                                    Async\n                                pullInfo\n                            \n                            \n                                    \n                                    Async\n                                refreshToken\n                            \n                            \n                                    \n                                    \n                                    Async\n                                reuseUser\n                            \n                            \n                                    \n                                test\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateUser\n                            \n                            \n                                    \n                                    Async\n                                userLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        addEmployee\n                        \n                    \n                \n            \n            \n                \n                        \n                    addEmployee(employee: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('add')@UseGuards(LoginGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/employee/employee.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                employee\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        frozenUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    frozenUser(user: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('frozen')@UseGuards(LoginGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/employee/employee.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        initData\n                        \n                    \n                \n            \n            \n                \n                        \n                    initData()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('init')\n                \n            \n\n                    \n                        \n                            Defined in src/employee/employee.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        pullInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    pullInfo(pageNo: number, pageSize: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('pull')@UseGuards(LoginGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/employee/employee.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pageNo\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshToken(refresh: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('refresh')\n                \n            \n\n                    \n                        \n                            Defined in src/employee/employee.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refresh\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        reuseUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    reuseUser(user: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('reuse')@UseGuards(LoginGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/employee/employee.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        test\n                        \n                    \n                \n            \n            \n                \n                        \n                    test()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('test')\n                \n            \n\n                    \n                        \n                            Defined in src/employee/employee.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(user: UpdateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('update')@UseGuards(LoginGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/employee/employee.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        userLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    userLogin(user: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/employee/employee.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, Query, UseGuards } from '@nestjs/common';\nimport { EmployeeService } from './employee.service';\nimport { LoginDto } from './dto/employee-login.dto';\nimport { RegisterDto } from './dto/employee-register.dto';\nimport { LoginGuard } from '../common/guard/login-guard.guard';\nimport { UpdateDto } from './dto/employee-update.dto';\n\n@Controller('employee')\nexport class EmployeeController {\n  constructor(private readonly employeeService: EmployeeService) {}\n  //员工测试接口\n  @Get('test')\n  test() {\n    return this.employeeService.test();\n  }\n  //初始插入表数据\n  @Get('init')\n  async initData() {\n    return await this.employeeService.insertOne();\n  }\n  //员工登录接口\n  @Post('login')\n  async userLogin(@Body() user: LoginDto) {\n    return await this.employeeService.userLogin(user);\n  }\n  //token刷新接口\n  @Get('refresh')\n  async refreshToken(@Query('refresh') refresh: string) {\n    return await this.employeeService.refreshToken(refresh);\n  }\n  //添加员工接口\n  @Post('add')\n  @UseGuards(LoginGuard)\n  async addEmployee(@Body() employee: RegisterDto) {\n    return await this.employeeService.add(employee);\n  }\n  //分页查询员工数据\n  @Get('pull')\n  @UseGuards(LoginGuard)\n  async pullInfo(\n    @Query('pageNo') pageNo: number,\n    @Query('pageSize') pageSize: number,\n  ) {\n    return await this.employeeService.searchByPages(pageNo, pageSize);\n  }\n  //用户冻结接口\n  @Get('frozen')\n  @UseGuards(LoginGuard)\n  async frozenUser(@Query('user') user: string) {\n    return await this.employeeService.frozenEmployee(user);\n  }\n  //用户账户解冻接口\n  @Get('reuse')\n  @UseGuards(LoginGuard)\n  async reuseUser(@Query('user') user: string) {\n    return await this.employeeService.reuse(user);\n  }\n  //更新用户接口\n  @Post('update')\n  @UseGuards(LoginGuard)\n  async updateUser(@Body() user: UpdateDto) {\n    return await this.employeeService.updateUser(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmployeeModule.html":{"url":"modules/EmployeeModule.html","title":"module - EmployeeModule","body":"\n                   \n\n\n\n\n    Modules\n    EmployeeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EmployeeModule\n\n\n\ncluster_EmployeeModule_providers\n\n\n\n\nEmployeeService\n\nEmployeeService\n\n\n\nEmployeeModule\n\nEmployeeModule\n\nEmployeeModule -->\n\nEmployeeService->EmployeeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/employee/employee.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EmployeeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EmployeeController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { EmployeeService } from './employee.service';\nimport { EmployeeController } from './employee.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Employee } from './entities/employee.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Employee])],\n  controllers: [EmployeeController],\n  providers: [EmployeeService],\n})\nexport class EmployeeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmployeeService.html":{"url":"injectables/EmployeeService.html","title":"injectable - EmployeeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmployeeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/employee.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                configService\n                            \n                            \n                                    \n                                    Private\n                                employeeEntity\n                            \n                            \n                                    \n                                    Private\n                                jwtService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                add\n                            \n                            \n                                    Async\n                                frozenEmployee\n                            \n                            \n                                    Async\n                                insertOne\n                            \n                            \n                                    Async\n                                refreshToken\n                            \n                            \n                                    Async\n                                reuse\n                            \n                            \n                                    Async\n                                searchByPages\n                            \n                            \n                                test\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                            \n                                    Async\n                                userLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        add\n                        \n                    \n                \n            \n            \n                \n                        \n                    add(employee: RegisterDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/employee.service.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                employee\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        frozenEmployee\n                        \n                    \n                \n            \n            \n                \n                        \n                    frozenEmployee(user: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/employee.service.ts:234\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        insertOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    insertOne()\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/employee.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshToken(str: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/employee.service.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        reuse\n                        \n                    \n                \n            \n            \n                \n                        \n                    reuse(user: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/employee.service.ts:269\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchByPages\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchByPages(pageNo: number, pageSize: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/employee.service.ts:193\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pageNo\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        test\n                        \n                    \n                \n            \n            \n                \ntest()\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/employee.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { code: any; message: string; data: {}; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(user: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/employee.service.ts:309\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        userLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    userLogin(user: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/employee.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConfigService\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(ConfigService)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/employee.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        employeeEntity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repository\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectRepository(Employee)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/employee.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        jwtService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JwtService\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(JwtService)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/employee.service.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpStatus, Inject, Injectable } from '@nestjs/common';\nimport { LoginDto } from './dto/employee-login.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Employee } from './entities/employee.entity';\nimport { Repository } from 'typeorm';\nimport { md5 } from '../utils/md5';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport { RegisterDto } from './dto/employee-register.dto';\nimport { BackVo } from './vo/employee-back.vo';\nimport { UpdateDto } from './dto/employee-update.dto';\n\n@Injectable()\nexport class EmployeeService {\n  //注入employee entity\n  @InjectRepository(Employee)\n  private employeeEntity: Repository;\n  //注入config service\n  @Inject(ConfigService)\n  private configService: ConfigService;\n  //注入JWT service\n  @Inject(JwtService)\n  private jwtService: JwtService;\n  //测试接口\n  test() {\n    return {\n      code: HttpStatus.OK,\n      message: `This action returns all employee`,\n      data: {},\n    };\n  }\n  //初始插入表数据\n  async insertOne() {\n    try {\n      const user = new Employee();\n      user.username = 'admin';\n      user.password = md5('123456');\n      user.sex = '1';\n      user.phone = '13144453456';\n      user.status = 1;\n      user.id_number = '546342344354654465';\n      const result = await this.employeeEntity.insert(user);\n      return {\n        code: HttpStatus.OK,\n        message: '插入成功',\n        data: result,\n      };\n    } catch (e) {\n      return {\n        code: HttpStatus.BAD_REQUEST,\n        message: '错误',\n        data: e,\n      };\n    }\n  }\n  //用户登录接口\n  async userLogin(user: LoginDto) {\n    try {\n      const person = await this.employeeEntity.findOne({\n        where: {\n          username: user.username,\n        },\n      });\n      if (person.password !== md5(user.password)) {\n        return {\n          code: HttpStatus.BAD_REQUEST,\n          message: '密码错误',\n        };\n      }\n      if (person.status === 0) {\n        return {\n          code: HttpStatus.BAD_REQUEST,\n          message: '用户已被封禁',\n        };\n      }\n      //生成access token\n      const access = this.jwtService.sign(\n        {\n          username: user.username,\n          password: user.password,\n        },\n        {\n          expiresIn: this.configService.get('jwt_server_access'),\n        },\n      );\n      const refresh = this.jwtService.sign(\n        {\n          username: user.username,\n        },\n        {\n          expiresIn: this.configService.get('jwt_server_refresh'),\n        },\n      );\n      return {\n        code: HttpStatus.OK,\n        message: '登陆成功',\n        data: {\n          accessToken: access,\n          refreshToken: refresh,\n        },\n      };\n    } catch (e) {\n      return {\n        code: HttpStatus.BAD_REQUEST,\n        message: '错误',\n        data: e,\n      };\n    }\n  }\n  //token 刷新接口\n  async refreshToken(str: string) {\n    try {\n      const data = await this.jwtService.verify(str);\n      const user = await this.employeeEntity.findOne({\n        where: {\n          username: data.username,\n        },\n      });\n      if (!user) {\n        return {\n          code: HttpStatus.BAD_REQUEST,\n          message: '用户不存在',\n        };\n      }\n      const access = this.jwtService.sign(\n        {\n          username: user.username,\n          password: user.password,\n        },\n        {\n          expiresIn: this.configService.get('jwt_server_access'),\n        },\n      );\n      const refresh = this.jwtService.sign(\n        {\n          username: user.username,\n        },\n        {\n          expiresIn: this.configService.get('jwt_server_refresh'),\n        },\n      );\n      return {\n        code: HttpStatus.OK,\n        message: '刷新成功',\n        data: {\n          access: access,\n          refresh: refresh,\n        },\n      };\n    } catch (e) {\n      return {\n        code: HttpStatus.BAD_REQUEST,\n        message: 'refresh token 已过期,请重新登录',\n        data: e,\n      };\n    }\n  }\n  //添加员工接口\n  async add(employee: RegisterDto) {\n    try {\n      const user = await this.employeeEntity.findOne({\n        where: {\n          username: employee.username,\n        },\n      });\n      if (user) {\n        return {\n          code: HttpStatus.BAD_REQUEST,\n          message: '用户已注册，请登录',\n        };\n      }\n      const newEmployee = new Employee();\n      newEmployee.username = employee.username;\n      newEmployee.password = md5(employee.password);\n      newEmployee.sex = employee.sex;\n      newEmployee.phone = employee.phone;\n      newEmployee.status = employee.status;\n      newEmployee.id_number = employee.id_number;\n      await this.employeeEntity.save(newEmployee);\n      return {\n        code: HttpStatus.OK,\n        message: '添加成功',\n      };\n    } catch (e) {\n      return {\n        code: HttpStatus.BAD_REQUEST,\n        message: '错误',\n        data: e,\n      };\n    }\n  }\n  //分页查询员工数据\n  async searchByPages(pageNo: number, pageSize: number) {\n    try {\n      if (!pageNo || pageNo  {\n        vo.username = item.username;\n        vo.password = item.password;\n        vo.sex = item.sex;\n        vo.phone = item.phone;\n        vo.id_number = item.id_number;\n        vo.status = item.status;\n        list.push(vo);\n      });\n      return {\n        code: HttpStatus.OK,\n        message: '拉取成功',\n        data: {\n          result: list,\n          count: totalCount,\n        },\n      };\n    } catch (e) {\n      return {\n        code: HttpStatus.BAD_REQUEST,\n        message: '拉取错误',\n        data: e,\n      };\n    }\n  }\n  //禁用员工账号接口\n  async frozenEmployee(user: string) {\n    try {\n      const result = await this.employeeEntity.findOne({\n        where: {\n          username: user,\n        },\n      });\n      if (!result) {\n        return {\n          code: HttpStatus.BAD_REQUEST,\n          message: '用户不存在，错误',\n        };\n      }\n      const person = await this.employeeEntity.update(\n        {\n          username: user,\n        },\n        {\n          status: 0,\n        },\n      );\n      return {\n        code: HttpStatus.OK,\n        message: `用户: ${user} 账户已冻结`,\n        data: person,\n      };\n    } catch (e) {\n      return {\n        code: HttpStatus.BAD_REQUEST,\n        message: '错误',\n        data: e,\n      };\n    }\n  }\n  //解禁用户账户接口\n  async reuse(user: string) {\n    try {\n      const result = await this.employeeEntity.findOne({\n        where: {\n          username: user,\n        },\n      });\n      if (!result) {\n        return {\n          code: HttpStatus.BAD_REQUEST,\n          message: '未找到用户，错误',\n        };\n      }\n      if (result.status !== 0) {\n        return {\n          code: HttpStatus.BAD_REQUEST,\n          message: '用户账户未被封禁，无需解冻',\n        };\n      }\n      await this.employeeEntity.update(\n        {\n          username: user,\n        },\n        {\n          status: 1,\n        },\n      );\n      return {\n        code: HttpStatus.OK,\n        message: '成功解禁',\n      };\n    } catch (e) {\n      return {\n        code: HttpStatus.BAD_REQUEST,\n        message: '错误',\n        data: e,\n      };\n    }\n  }\n  //更新用户接口\n  async updateUser(user: UpdateDto) {\n    try {\n      const person = await this.employeeEntity.findOne({\n        where: {\n          username: user.username,\n        },\n      });\n      if (!person) {\n        return {\n          code: HttpStatus.BAD_REQUEST,\n          message: '用户不存在',\n        };\n      }\n      await this.employeeEntity.update(\n        {\n          username: user.username,\n        },\n        {\n          name: user.name,\n          password: user.password,\n          phone: user.phone,\n          sex: user.sex,\n          id_number: user.id_number,\n        },\n      );\n      return {\n        code: HttpStatus.OK,\n        message: '更新成功',\n        data: {},\n      };\n    } catch (e) {\n      return {\n        code: HttpStatus.BAD_REQUEST,\n        message: '错误',\n        data: e,\n      };\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/dto/employee-login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '密码不能为空'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/employee-login.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '用户名不能为空'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/employee-login.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class LoginDto {\n  @IsNotEmpty({\n    message: '用户名不能为空',\n  })\n  username: string;\n  @IsNotEmpty({\n    message: '密码不能为空',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LoginGuard.html":{"url":"guards/LoginGuard.html","title":"guard - LoginGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    LoginGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guard/login-guard.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                jwtService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/guard/login-guard.guard.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { Request } from 'express';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class LoginGuard implements CanActivate {\n  //注入jwt service\n  @Inject(JwtService)\n  private jwtService: JwtService;\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const request: Request = context.switchToHttp().getRequest();\n    const authorization = request.headers.authorization;\n    if (!authorization) {\n      throw new UnauthorizedException('用户未登录');\n    }\n    try {\n      const token = authorization.split(' ')[1];\n      const data = this.jwtService.verify(token);\n\n      return true;\n    } catch (e) {\n      throw new UnauthorizedException('token 失效，请重新登录');\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/dto/employee-register.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            LoginDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id_number\n                            \n                            \n                                phone\n                            \n                            \n                                sex\n                            \n                            \n                                status\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/employee-register.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/employee-register.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/employee-register.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/employee-register.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '密码不能为空'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         LoginDto\n\n                            \n                        \n                    \n                        \n                                Defined in         LoginDto:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '用户名不能为空'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         LoginDto\n\n                            \n                        \n                    \n                        \n                                Defined in         LoginDto:7\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { LoginDto } from './employee-login.dto';\n\nexport class RegisterDto extends LoginDto {\n  phone: string;\n  sex: string;\n  id_number: string;\n  status: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCategoryDto.html":{"url":"classes/UpdateCategoryDto.html","title":"class - UpdateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/category/dto/update-category.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(DishesCategoryDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { DishesCategoryDto } from './create-category.dto';\n\nexport class UpdateCategoryDto extends PartialType(DishesCategoryDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDto.html":{"url":"classes/UpdateDto.html","title":"class - UpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/dto/employee-update.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            RegisterDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                id_number\n                            \n                            \n                                phone\n                            \n                            \n                                sex\n                            \n                            \n                                status\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/employee-update.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         RegisterDto\n\n                            \n                        \n                    \n                        \n                                Defined in         RegisterDto:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         RegisterDto\n\n                            \n                        \n                    \n                        \n                                Defined in         RegisterDto:4\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         RegisterDto\n\n                            \n                        \n                    \n                        \n                                Defined in         RegisterDto:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         RegisterDto\n\n                            \n                        \n                    \n                        \n                                Defined in         RegisterDto:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '密码不能为空'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         LoginDto\n\n                            \n                        \n                    \n                        \n                                Defined in         LoginDto:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '用户名不能为空'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         LoginDto\n\n                            \n                        \n                    \n                        \n                                Defined in         LoginDto:7\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RegisterDto } from './employee-register.dto';\n\nexport class UpdateDto extends RegisterDto {\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/category/category.controller.ts\n            \n            controller\n            CategoryController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/category/category.service.ts\n            \n            injectable\n            CategoryService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/category/dto/dishes-category.dto.ts\n            \n            class\n            DishesCategoryDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/category/dto/update-category.dto.ts\n            \n            class\n            UpdateCategoryDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/category/entities/category.entity.ts\n            \n            class\n            Category\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/guard/login-guard.guard.ts\n            \n            guard\n            LoginGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/employee/dto/employee-login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/employee/dto/employee-register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/employee/dto/employee-update.dto.ts\n            \n            class\n            UpdateDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/employee/employee.controller.ts\n            \n            controller\n            EmployeeController\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/employee/employee.service.ts\n            \n            injectable\n            EmployeeService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/employee/entities/employee.entity.ts\n            \n            entity\n            Employee\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/employee/vo/employee-back.vo.ts\n            \n            class\n            BackVo\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/md5.ts\n            \n            function\n            md5\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.2.2\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/typeorm : ^10.0.2\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            express-session : ^1.18.0\n        \n            mysql2 : ^3.9.7\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            md5   (src/.../md5.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/md5.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        md5\n                        \n                    \n                \n            \n            \n                \nmd5(str: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmployeeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CategoryModule\n\n\n\ncluster_CategoryModule_providers\n\n\n\ncluster_EmployeeModule\n\n\n\ncluster_EmployeeModule_providers\n\n\n\n\nCategoryModule\n\nCategoryModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCategoryModule->AppModule\n\n\n\n\n\nEmployeeModule\n\nEmployeeModule\n\nAppModule -->\n\nEmployeeModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCategoryService\n\nCategoryService\n\nCategoryModule -->\n\nCategoryService->CategoryModule\n\n\n\n\n\nEmployeeService\n\nEmployeeService\n\nEmployeeModule -->\n\nEmployeeService->EmployeeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
